---
layout: post
title:  '[TCP/IP]TCP/IP에 대하여'
subtitle:   'TCP/IP에 대하여'
categories: 'study'
tags: 'etc'
---

네트워크를 공부하던중 TCP/IP에 대한 자료가 있어 정리 해보겠습니다.

---

## TCP/IP??

위키백과에서는 다음과 같이 설명하고 있습니다.  

""
TCP/IP는 패킷 통신 방식의 인터넷 프로토콜인 IP (인터넷 프로토콜)와 전송 조절 프로토콜인 TCP (전송 제어 프로토콜)로 이루어져 있다. IP는 패킷 전달 여부를 보증하지 않고, 패킷을 보낸 순서와 받는 순서가 다를 수 있다.(unreliable datagram service) TCP는 IP 위에서 동작하는 프로토콜로, 데이터의 전달을 보증하고 보낸 순서대로 받게 해준다. HTTP, FTP, SMTP 등 TCP를 기반으로 한 많은 수의 애플리케이션 프로토콜들이 IP 위에서 동작하기 때문에, 묶어서 TCP/IP로 부르기도 한다.
""

어후 무슨말인지 잘 모르겠습니다. 쉽게 풀어서 설명 해보도록 할게요.

---
## 서킷 통신


인터넷 이전에 사람들간에 연결을 하려는 시도는 계속 있었습니다. 모스부호도 그럴테고 전화기 역시 그러하죠.

인터넷이 생기기 전까지 통신을 하기 위해서는 양 쪽 모두의 연결이 필요했습니다.

만약 서로 간 연결이 이루어지면 연결이 끊어질 때 까지 해당 회선을 ``독점``하여 사용합니다. 이를 ``서킷 통신``이라 부릅니다.  
이 통신 방식은 통신을 원하는 양 쪽이 1:1로 연결 되어야 합니다. 처음부터 양 쪽이 연결되어 있거나, 중간에 교환소를 거쳐야 하죠.

일단 연결이 된 상태에서는 해당 회선을 완전히 점유하게 됩니다. 다른 쪽에서 연결하고 싶으면 연결이 이미 연결된 곳이 끊어지기 전까지 기다려야합니다.

---

## 패킷 통신

하지만 서킷 통신에는 치명적인 단점이 존재합니다. 바로 회선 단절인데, 회선이 끊어지면 다시 연결을 해야하고 누군가 선을 사용 중이면 기다려야합니다.

이러한 문제 점을 개선하고자 망을 여러개 느리는 ``다중망``을 활용하려 했지만, 선이 끊어지면 처음부터 다시 연결해야 하고 가능한 망을 다시 찾아 연결하는 것은 효율적인 방식이 아니였습니다.

이를 해결하고자 사용자가 보내는 내용을 작게 잘라서 보내는 방법을 고안했습니다. 잘게 잘라진 조각들은 각각 목적지를 향해서 가장 효율적인 방법으로 이동합니다.
이러한 방식을 사용함으로써 하나의 회선에서도 여러명이 동시에 통신을 할 수 있게 되었고, 중간에 내용이 끊어지거나 사라지더라도 그 부분만 요청해서 다시 받을 수 있게 되었습니다.

이것이 바로 ``패킷 통신``입니다.

---

## TCP/IP

오늘날에 인터넷 통신의 대부분은 패킷 통신을 기본으로 하고 있습니다. ``TCP/IP``는 패킷 통신을 위한 인터넷의 규약입니다.  
``IP``는 데이터의 조각들을 최대한 빨리 목적지로 보내는 역할을 합니다. 조각들의 순서가 뒤바뀌거나 일부가 누락된다 하더라도 크게 상관하지 않습니다.  
``TCP``는 IP보다는 느리지만 꼼꼼한 방식을 사용합니다. 도착한 조각을 점검하여 줄을 세우고 망겨졌거나 빠진 조각을 다시 요청합니다.   

두 방식을 조합하여 인터넷 데이터 통신을 하는 것을 묶어 ``TCP/IP``라고 부르는 것입니다.

